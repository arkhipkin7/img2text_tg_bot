"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥—ã /start –∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
"""
import logging
from aiogram import Router, F
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command
from config import MESSAGES

logger = logging.getLogger(__name__)
router = Router()

@router.message(Command("start"))
async def cmd_start(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    logger.info(f"–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}")
    await show_main_menu(message)

@router.message(Command("help"))
async def cmd_help(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    await show_help_menu(message)

@router.message(Command("image_generate"))
async def cmd_image_generate(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /image_generate"""
    await show_image_generate_menu(message)

@router.message(Command("text_generate"))
async def cmd_text_generate(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /text_generate"""
    await show_text_generate_menu(message)

@router.message(Command("both_generate"))
async def cmd_both_generate(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /both_generate"""
    await show_both_generate_menu(message)

async def show_main_menu(message: Message):
    """–ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    try:
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(text="üì∑ –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", callback_data="process_image_only"),
                InlineKeyboardButton(text="üìù –û–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ç–µ–∫—Å—Ç", callback_data="process_text_only")
            ],
            [
                InlineKeyboardButton(text="üì∑üìù –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ–±–∞", callback_data="process_both")
            ],
            [
                InlineKeyboardButton(text="‚ÑπÔ∏è –ü–æ–º–æ—â—å", callback_data="help")
            ]
        ])
        
        await message.answer(
            MESSAGES["welcome"],
            reply_markup=keyboard
        )
        
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ start: {e}")
        await message.answer(MESSAGES["error"])

async def show_help_menu(message: Message):
    """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é –ø–æ–º–æ—â–∏"""
    try:
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_start")
            ]
        ])
        
        help_text = (
            "ü§ñ **–ü–æ–º–æ—â—å –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞**\n\n"
            "**–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:**\n"
            "üì∑ **–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è** - –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞\n"
            "üìù **–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞** - –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞\n"
            "üì∑üìù **–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±–æ–∏—Ö** - –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ + –æ–ø–∏—Å–∞–Ω–∏–µ\n\n"
            "**–ß—Ç–æ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è:**\n"
            "‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞\n"
            "‚Ä¢ –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ\n"
            "‚Ä¢ –ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ\n"
            "‚Ä¢ –û—Å–Ω–æ–≤–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏\n"
            "‚Ä¢ SEO-–∫–ª—é—á–∏\n"
            "‚Ä¢ –¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è\n\n"
            "**–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã:**\n"
            "‚Ä¢ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: JPG, JPEG, PNG, WEBP\n"
            "‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 20MB\n"
            "‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ —Ç–µ–∫—Å—Ç–∞: 5000 —Å–∏–º–≤–æ–ª–æ–≤"
        )
        
        await message.answer(help_text, reply_markup=keyboard, parse_mode="Markdown")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ help: {e}")
        await message.answer(MESSAGES["error"])

async def show_image_generate_menu(message: Message):
    """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é"""
    try:
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_start")
            ]
        ])
        
        await message.answer(
            "üì∑ **–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞**\n\n"
            "–Ø –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É—é —Ñ–æ—Ç–æ –∏ —Å–æ–∑–¥–∞–º:\n"
            "‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞\n"
            "‚Ä¢ –û–ø–∏—Å–∞–Ω–∏–µ —Å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏\n"
            "‚Ä¢ SEO-–∫–ª—é—á–∏\n"
            "‚Ä¢ –¶–µ–ª–µ–≤—É—é –∞—É–¥–∏—Ç–æ—Ä–∏—é",
            reply_markup=keyboard
        )
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ show_image_generate_menu: {e}")
        await message.answer(MESSAGES["error"])

async def show_text_generate_menu(message: Message):
    """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ —Ç–µ–∫—Å—Ç—É"""
    try:
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_start")
            ]
        ])
        
        await message.answer(
            "üìù **–û—Ç–ø—Ä–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞**\n\n"
            "–Ø –¥–æ–ø–æ–ª–Ω—é –≤–∞—à —Ç–µ–∫—Å—Ç:\n"
            "‚Ä¢ SEO-–∫–ª—é—á–∞–º–∏ –¥–ª—è –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è\n"
            "‚Ä¢ –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏ —Ç–æ–≤–∞—Ä–∞\n"
            "‚Ä¢ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º —Ü–µ–ª–µ–≤–æ–π –∞—É–¥–∏—Ç–æ—Ä–∏–∏",
            reply_markup=keyboard
        )
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ show_text_generate_menu: {e}")
        await message.answer(MESSAGES["error"])

async def show_both_generate_menu(message: Message):
    """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é –∏ —Ç–µ–∫—Å—Ç—É"""
    try:
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_start")
            ]
        ])
        
        await message.answer(
            "üì∑üìù **–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞**\n\n"
            "–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ —è –ø–æ–ø—Ä–æ—à—É –≤–∞—Å –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ.\n\n"
            "–í–º–µ—Å—Ç–µ –º—ã —Å–æ–∑–¥–∞–¥–∏–º –ø–æ–ª–Ω—É—é –∫–∞—Ä—Ç–æ—á–∫—É —Ç–æ–≤–∞—Ä–∞ —Å:\n"
            "‚Ä¢ –ê–Ω–∞–ª–∏–∑–æ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è\n"
            "‚Ä¢ –î–æ–ø–æ–ª–Ω–µ–Ω–Ω—ã–º –æ–ø–∏—Å–∞–Ω–∏–µ–º\n"
            "‚Ä¢ SEO-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π",
            reply_markup=keyboard
        )
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ show_both_generate_menu: {e}")
        await message.answer(MESSAGES["error"])

@router.callback_query(F.data == "help")
async def help_callback(callback):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ü–æ–º–æ—â—å'"""
    try:
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_start")
            ]
        ])
        
        help_text = (
            "ü§ñ **–ü–æ–º–æ—â—å –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞**\n\n"
            "**–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:**\n"
            "üì∑ **–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è** - –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞\n"
            "üìù **–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞** - –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞\n"
            "üì∑üìù **–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±–æ–∏—Ö** - –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ + –æ–ø–∏—Å–∞–Ω–∏–µ\n\n"
            "**–ß—Ç–æ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è:**\n"
            "‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞\n"
            "‚Ä¢ –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ\n"
            "‚Ä¢ –ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ\n"
            "‚Ä¢ –û—Å–Ω–æ–≤–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏\n"
            "‚Ä¢ SEO-–∫–ª—é—á–∏\n"
            "‚Ä¢ –¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è\n\n"
            "**–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã:**\n"
            "‚Ä¢ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: JPG, JPEG, PNG, WEBP\n"
            "‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 20MB\n"
            "‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ —Ç–µ–∫—Å—Ç–∞: 5000 —Å–∏–º–≤–æ–ª–æ–≤"
        )
        
        await callback.message.edit_text(help_text, reply_markup=keyboard, parse_mode="Markdown")
        await callback.answer()
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ help_callback: {e}")
        await callback.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", show_alert=True)

@router.callback_query(F.data == "back_to_start")
async def back_to_start_callback(callback):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ù–∞–∑–∞–¥' –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é"""
    try:
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(text="üì∑ –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", callback_data="process_image_only"),
                InlineKeyboardButton(text="üìù –û–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ç–µ–∫—Å—Ç", callback_data="process_text_only")
            ],
            [
                InlineKeyboardButton(text="üì∑üìù –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ–±–∞", callback_data="process_both")
            ],
            [
                InlineKeyboardButton(text="‚ÑπÔ∏è –ü–æ–º–æ—â—å", callback_data="help")
            ]
        ])
        
        await callback.message.edit_text(
            MESSAGES["welcome"],
            reply_markup=keyboard
        )
        await callback.answer()
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ back_to_start_callback: {e}")
        await callback.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", show_alert=True)

@router.callback_query(F.data == "process_image_only")
async def process_image_only_callback(callback):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ'"""
    try:
        await callback.message.edit_text(
            "üì∑ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏"
        )
        await callback.answer()
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ process_image_only_callback: {e}")
        await callback.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", show_alert=True)

@router.callback_query(F.data == "process_text_only")
async def process_text_only_callback(callback):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–û–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ç–µ–∫—Å—Ç'"""
    try:
        await callback.message.edit_text(
            "üìù –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏"
        )
        await callback.answer()
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ process_text_only_callback: {e}")
        await callback.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", show_alert=True)

@router.callback_query(F.data == "process_both")
async def process_both_callback(callback):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ–±–∞'"""
    try:
        await callback.message.edit_text(
            "üì∑üìù –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞, –∞ –∑–∞—Ç–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ"
        )
        await callback.answer()
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ process_both_callback: {e}")
        await callback.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", show_alert=True)

@router.callback_query(F.data == "generate_more")
async def generate_more_callback(callback):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –µ—â–µ'"""
    try:
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(text="üì∑ –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", callback_data="process_image_only"),
                InlineKeyboardButton(text="üìù –û–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ç–µ–∫—Å—Ç", callback_data="process_text_only")
            ],
            [
                InlineKeyboardButton(text="üì∑üìù –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ–±–∞", callback_data="process_both")
            ],
            [
                InlineKeyboardButton(text="‚ÑπÔ∏è –ü–æ–º–æ—â—å", callback_data="help")
            ]
        ])
        
        await callback.message.edit_text(
            "üîÑ **–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –æ–±—Ä–∞–±–æ—Ç–∫–∏:**\n\n"
            "üì∑ **–ê–Ω–∞–ª–∏–∑ —Ñ–æ—Ç–æ** - —Å–æ–∑–¥–∞–º –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é\n"
            "üìù **–î–æ–ø–æ–ª–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç** - –¥–æ–±–∞–≤–ª—é SEO-–∫–ª—é—á–∏ –∫ –≤–∞—à–µ–º—É –æ–ø–∏—Å–∞–Ω–∏—é\n"
            "üì∑üìù **–ü–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑** - –æ–±—ä–µ–¥–∏–Ω—é —Ñ–æ—Ç–æ –∏ —Ç–µ–∫—Å—Ç",
            reply_markup=keyboard
        )
        await callback.answer()
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ generate_more_callback: {e}")
        await callback.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", show_alert=True) 