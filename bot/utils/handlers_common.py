"""
–û–±—â–∏–µ —É—Ç–∏–ª–∏—Ç—ã –¥–ª—è handlers –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–¥–∞.
"""

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from shared.constants import MESSAGES


class HandlerUtils:
    """–£—Ç–∏–ª–∏—Ç—ã –¥–ª—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤"""
    
    @staticmethod
    def create_main_menu_keyboard(show_demo: bool = False) -> InlineKeyboardMarkup:
        """–°–æ–∑–¥–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
        keyboard = []
        
        if show_demo:
            keyboard.append([
                InlineKeyboardButton(text="üé¨ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∏–º–µ—Ä", callback_data="show_demo")
            ])
        
        keyboard.extend([
            [
                InlineKeyboardButton(text="üì∑ –§–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞", callback_data="process_image_only"),
                InlineKeyboardButton(text="üìù –û–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞", callback_data="process_text_only")
            ],
            [
                InlineKeyboardButton(text="üì∑üìù –§–æ—Ç–æ + –æ–ø–∏—Å–∞–Ω–∏–µ", callback_data="process_both")
            ],
            [
                InlineKeyboardButton(text="üíé –¢–∞—Ä–∏—Ñ—ã", callback_data="subscriptions"),
                InlineKeyboardButton(text="‚ÑπÔ∏è –ü–æ–º–æ—â—å", callback_data="help")
            ]
        ])
        
        return InlineKeyboardMarkup(inline_keyboard=keyboard)
    
    @staticmethod
    def create_back_keyboard() -> InlineKeyboardMarkup:
        """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π '–ù–∞–∑–∞–¥'"""
        return InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_start_from_instructions")]
        ])
    
    @staticmethod
    def create_help_back_keyboard() -> InlineKeyboardMarkup:
        """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π '–ù–∞–∑–∞–¥' –¥–ª—è –ø–æ–º–æ—â–∏"""
        return InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_start_from_help")]
        ])
    
    @staticmethod
    def create_image_menu_keyboard() -> InlineKeyboardMarkup:
        """–°–æ–∑–¥–∞–µ—Ç –º–µ–Ω—é –¥–ª—è –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
        return InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(text="‚úÖ –û–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", callback_data="process_image_now"),
                InlineKeyboardButton(text="üìù –î–æ–±–∞–≤–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ", callback_data="add_text_to_image")
            ],
            [
                InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_start_from_result")
            ]
        ])
    
    @staticmethod
    def create_text_menu_keyboard() -> InlineKeyboardMarkup:
        """–°–æ–∑–¥–∞–µ—Ç –º–µ–Ω—é –¥–ª—è –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞"""
        return InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(text="‚úÖ –û–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç", callback_data="process_text_now"),
                InlineKeyboardButton(text="üì∑ –î–æ–±–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", callback_data="add_image_to_text")
            ],
            [
                InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_start_from_result")
            ]
        ])
    
    @staticmethod
    async def send_welcome_menu(callback: CallbackQuery, edit: bool = True) -> None:
        """
        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ –º–µ–Ω—é.
        
        Args:
            callback: Callback query
            edit: –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ (True) –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ (False)
        """
        keyboard = HandlerUtils.create_main_menu_keyboard()
        
        if edit:
            await callback.message.edit_text(
                MESSAGES["welcome"],
                reply_markup=keyboard,
                parse_mode="Markdown"
            )
        else:
            await callback.message.answer(
                MESSAGES["welcome"],
                reply_markup=keyboard,
                parse_mode="Markdown"
            )
    
    @staticmethod
    def create_result_keyboard(show_upgrade_hint: bool = False, generation_type: str = "unknown") -> InlineKeyboardMarkup:
        """–°–æ–∑–¥–∞–µ—Ç —É–ø—Ä–æ—â–µ–Ω–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤"""
        keyboard = [
            [
                InlineKeyboardButton(text="üîÑ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –µ—â–µ", callback_data=f"generate_more_{generation_type}"),
                InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_start_from_result")
            ]
        ]
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –ø–æ–∫—É–ø–∫–∏ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        if show_upgrade_hint:
            keyboard.append([
                InlineKeyboardButton(text="üíé –ö—É–ø–∏—Ç—å –±–æ–ª—å—à–µ –∑–∞–ø—Ä–æ—Å–æ–≤", callback_data="subscriptions")
            ])
        
        return InlineKeyboardMarkup(inline_keyboard=keyboard)
    
    @staticmethod
    def create_demo_keyboard() -> InlineKeyboardMarkup:
        """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –¥–µ–º–æ"""
        return InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(text="üöÄ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å –º–æ–∏–º —Ç–æ–≤–∞—Ä–æ–º", callback_data="back_to_start_from_demo")
            ],
            [
                InlineKeyboardButton(text="üíé –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–∞—Ä–∏—Ñ—ã", callback_data="subscriptions")
            ]
        ])
    
    @staticmethod
    def create_quota_exceeded_keyboard() -> InlineKeyboardMarkup:
        """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø—Ä–∏ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–∏ –∫–≤–æ—Ç—ã"""
        return InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(text="üíé –ö—É–ø–∏—Ç—å –∑–∞–ø—Ä–æ—Å—ã", callback_data="subscriptions")
            ],
            [
                InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_start_from_result")
            ]
        ])
    
    @staticmethod
    async def send_welcome_menu(callback: CallbackQuery, edit: bool = True, user_id: int = None) -> None:
        """
        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ –º–µ–Ω—é —Å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–º –∫–≤–æ—Ç—ã.
        
        Args:
            callback: Callback query
            edit: –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ (True) –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ (False)
            user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–≤–æ—Ç—ã
        """
        from bot.utils.quota_utils import quota_utils
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å –∫–≤–æ—Ç—ã
        if user_id is None:
            user_id = callback.from_user.id
        
        quota_status = await quota_utils.get_quota_indicator(user_id)
        quota_detailed = await quota_utils.get_quota_status_text(user_id)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ–º–æ –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        remaining = await quota_utils.subs.get_remaining(user_id)
        is_new_user = remaining >= 3  # –ü–æ–ª–Ω–∞—è –∫–≤–æ—Ç–∞ = –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        
        message_text = MESSAGES["welcome"].format(
            quota_status=f"{quota_status}\n{quota_detailed}"
        )
        
        keyboard = HandlerUtils.create_main_menu_keyboard(show_demo=is_new_user)
        
        if edit:
            await callback.message.edit_text(
                message_text,
                reply_markup=keyboard,
                parse_mode="Markdown"
            )
        else:
            await callback.message.answer(
                message_text,
                reply_markup=keyboard,
                parse_mode="Markdown"
            )
    
    @staticmethod
    async def clean_message_and_send_new_menu(callback: CallbackQuery) -> None:
        """
        –£–±–∏—Ä–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ —Å —Ç–µ–∫—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–æ–≤–æ–µ –º–µ–Ω—é.
        –î–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏.
        """
        # –£–±–∏—Ä–∞–µ–º –∫–Ω–æ–ø–∫–∏ —Å —Ç–µ–∫—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        try:
            await callback.message.edit_reply_markup(reply_markup=None)
        except:
            pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ –º–µ–Ω—é
        await HandlerUtils.send_welcome_menu(callback, edit=False)
