"""
–ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ –ø—Ä–∞–≤–¥—ã –¥–ª—è —Ç–∞—Ä–∏—Ñ–æ–≤/—Ü–µ–Ω –∏ –ª–∏–º–∏—Ç–æ–≤.
–ú–µ–Ω—è–π—Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è –∑–¥–µ—Å—å ‚Äî –±–æ—Ç –ø–æ–¥—Ö–≤–∞—Ç–∏—Ç –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ.
"""

PRICING = {
    "free_requests": 3,
    "plans": [
        {
            "code": "10", 
            "quota": 10, 
            "price_rub": 180, 
            "label": "üå± –°—Ç–∞—Ä—Ç–µ—Ä", 
            "description": "180‚ÇΩ / 10 –∑–∞–ø—Ä–æ—Å–æ–≤",
            "price_per_request": 18,
            "brief": "–î–ª—è –Ω–∞—á–∞–ª–∞ –∏ —Ç–µ—Å—Ç–∞",
            "recommended": False,
            "benefits": "–ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ —Å —Å–µ—Ä–≤–∏—Å–æ–º"
        },
        {
            "code": "30", 
            "quota": 30, 
            "price_rub": 509, 
            "label": "üöÄ –ü—Ä–æ—Ä—ã–≤", 
            "description": "509‚ÇΩ / 30 –∑–∞–ø—Ä–æ—Å–æ–≤",
            "price_per_request": 17,
            "brief": "–ë–æ–ª—å—à–µ –≤—ã–≥–æ–¥—ã –ø—Ä–∏ –Ω–µ–±–æ–ª—å—à–æ–º —É–≤–µ–ª–∏—á–µ–Ω–∏–∏",
            "recommended": False,
            "benefits": "–≠–∫–æ–Ω–æ–º–∏—è 1‚ÇΩ –∑–∞ –∑–∞–ø—Ä–æ—Å –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å–æ –°—Ç–∞—Ä—Ç–µ—Ä–æ–º"
        },
        {
            "code": "100", 
            "quota": 100, 
            "price_rub": 1599, 
            "label": "‚≠ê –ü—Ä–æ—Ñ–∏", 
            "description": "1599‚ÇΩ / 100 –∑–∞–ø—Ä–æ—Å–æ–≤",
            "price_per_request": 16,
            "brief": "–û–ø—Ç–∏–º–∞–ª—å–Ω–æ –ø–æ —Ü–µ–Ω–µ –∏ –æ–±—ä—ë–º—É",
            "recommended": True,
            "benefits": "‚òÖ –°–∞–º—ã–π –≤—ã–≥–æ–¥–Ω—ã–π –≤—ã–±–æ—Ä! –≠–∫–æ–Ω–æ–º–∏—è 2‚ÇΩ –∑–∞ –∑–∞–ø—Ä–æ—Å"
        },
        {
            "code": "250", 
            "quota": 250, 
            "price_rub": 3747, 
            "label": "üíé –ü—Ä–µ–º–∏—É–º", 
            "description": "3747‚ÇΩ / 250 –∑–∞–ø—Ä–æ—Å–æ–≤",
            "price_per_request": 15,
            "brief": "–î–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞",
            "recommended": False,
            "benefits": "–≠–∫–æ–Ω–æ–º–∏—è 3‚ÇΩ –∑–∞ –∑–∞–ø—Ä–æ—Å. –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Å—Ä–µ–¥–Ω–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞"
        },
        {
            "code": "500", 
            "quota": 500, 
            "price_rub": 6994, 
            "label": "üëë –ò–º–ø–µ—Ä–∞—Ç–æ—Ä", 
            "description": "6994‚ÇΩ / 500 –∑–∞–ø—Ä–æ—Å–æ–≤",
            "price_per_request": 14,
            "brief": "–î–ª—è –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤",
            "recommended": False,
            "benefits": "–≠–∫–æ–Ω–æ–º–∏—è 4‚ÇΩ –∑–∞ –∑–∞–ø—Ä–æ—Å. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –≤—ã–≥–æ–¥–∞"
        },
        {
            "code": "1000", 
            "quota": 1000, 
            "price_rub": 12999, 
            "label": "üåü –ú–∞—Å—Ç–µ—Ä", 
            "description": "12999‚ÇΩ / 1000 –∑–∞–ø—Ä–æ—Å–æ–≤",
            "price_per_request": 13,
            "brief": "–î–ª—è –∞–≥–µ–Ω—Ç—Å—Ç–≤ –∏ –∫—Ä—É–ø–Ω–æ–≥–æ —Ä–∏—Ç–µ–π–ª–∞",
            "recommended": False,
            "benefits": "–≠–∫–æ–Ω–æ–º–∏—è 5‚ÇΩ –∑–∞ –∑–∞–ø—Ä–æ—Å. –õ—É—á—à–∞—è —Ü–µ–Ω–∞ –¥–ª—è –±–æ–ª—å—à–∏—Ö –æ–±—ä—ë–º–æ–≤"
        },
    ],
    "one_time": {
        "count": 1, 
        "price_rub": 20, 
        "label": "‚ö° –†–∞–∑–æ–≤—ã–π", 
        "description": "20‚ÇΩ / 1 –∑–∞–ø—Ä–æ—Å",
        "price_per_request": 20,
        "brief": "–î–ª—è —Ä–∞–∑–æ–≤—ã—Ö –∑–∞–¥–∞—á",
        "benefits": "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –±–µ–∑ –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤"
    },
}

def get_plan_quota_map() -> dict:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å {code: quota} –¥–ª—è –ø–ª–∞–Ω–æ–≤."""
    return {str(p["code"]): int(p["quota"]) for p in PRICING.get("plans", [])}


